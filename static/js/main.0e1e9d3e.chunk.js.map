{"version":3,"sources":["components/Task/Task.module.css","components/Form/Form.module.css","components/Button/Button.module.css","components/Button/Button.jsx","components/Form/Form.jsx","components/Header/Header.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","containers/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","children","bgColor","width","onClick","style","backgroundColor","className","styles","btn","Form","addTask","useState","name","setName","datetime","setDatetime","reminder","setReminder","onSubmit","e","preventDefault","target","reset","alert","formGroup","onChange","value","type","placeholder","inlineGroup","checked","Header","toggleForm","isFormVisible","Task","toggleReminder","deleteTask","onDoubleClick","borderLeftWidth","task","info","replace","color","TaskList","tasks","length","map","id","textAlign","fontSize","fontStyle","marginTop","Home","setTasks","setIsFormVisible","Math","floor","random","filteredTasks","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e1e9d3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1IAtP\",\"info\":\"Task_info__2rAd_\",\"datetime\":\"Task_datetime__1xUeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"Form_formGroup__1iZnP\",\"inlineGroup\":\"Form_inlineGroup__3t7i7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\"};","import React from 'react'\nimport styles from './Button.module.css';\n\nconst Button = ({ children, bgColor, width, onClick }) => {\n  return (\n    <button\n     onClick={ onClick }\n     style={{ backgroundColor: bgColor, width: width }}\n     className={`${styles.btn}`}>\n      { children }\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport styles from './Form.module.css'\nimport Button from '../Button/Button'\nimport { useState } from 'react';\n\nconst Form = ({ addTask }) => {\n\n  const [name, setName] = useState('');\n  const [datetime, setDatetime] = useState('');\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmitListener = (e) => {\n    e.preventDefault();\n    if(!name) {\n      alert('Task field is mandatory');\n    } else if(!datetime) {\n      alert('Date and Time filed is mandatory');\n    } else {\n      addTask({ name, datetime, reminder });\n      e.target.reset();\n      setName('');\n      setDatetime('');\n      setReminder(false);\n    }\n  }\n\n  return (\n    <form onSubmit={ onSubmitListener }>\n      <div className={ styles.formGroup }>\n        <label>Task</label>\n        <input onChange={(e) => setName(e.target.value)} value={name} type=\"text\" name=\"name\" placeholder=\"Add Task\" />\n      </div>\n      <div className={ styles.formGroup }>\n        <label>Date and Time</label>\n        <input onChange={(e) => setDatetime(e.target.value)} value={datetime} type=\"datetime-local\" name=\"datetime\" />\n      </div>\n      <div className={ styles.inlineGroup }>\n        <p>Set Reminder</p>\n        <input onChange={(e) => setReminder(e.target.checked)} checked={reminder} type=\"checkbox\" name=\"reminder\" />\n      </div>\n      <Button\n        bgColor = \"black\" \n        width = \"100%\"\n        className = \"btnFull\">\n          Save Task\n      </Button>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport Button from '../Button/Button'\nimport './Header.module.css'\n\nconst Header = ({ toggleForm, isFormVisible }) => {\n  return (\n    <header>\n      <h1>Task Tracker</h1>\n      <Button bgColor={ isFormVisible ? 'red' : 'green' } onClick={ toggleForm }>\n        { isFormVisible ? 'Close' : 'Add' }\n      </Button>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport styles from './Task.module.css'\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ name, datetime, reminder, toggleReminder, deleteTask }) => {\n  return (\n    <div\n     onDoubleClick={ toggleReminder }\n     style={{borderLeftWidth: reminder ? 4 : 0}}\n     className={styles.task}>\n      <div className={styles.info}>\n        <p className={styles.name}>{ name }</p>\n        <p className={styles.datetime}>{ datetime.replace(\"T\", \" at \") }</p>\n      </div>\n      <FaTimes onClick={ deleteTask } color=\"red\"></FaTimes>\n    </div>\n  )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from '../Task/Task'\n\nconst TaskList = ({ tasks, toggleReminder, deleteTask }) => {\n  return (\n    <div>\n      { tasks.length ? tasks.map((task) => \n        <Task\n          deleteTask = {() => deleteTask(task.id)}\n          toggleReminder = {() => toggleReminder(task.id)}\n          key = { task.id }\n          name = { task.name }\n          datetime = { task.datetime }\n          reminder = { task.reminder } />\n      )\n      : <p style={{\n         textAlign: \"center\",\n         color: \"gray\",\n         fontSize: \".8rem\", \n         fontStyle: \"italic\",\n         marginTop: 30}}>\n          No tasks to display\n        </p>}\n    </div>\n  )\n}\n\nexport default TaskList\n","import React from 'react'\nimport Form from '../components/Form/Form'\nimport Header from '../components/Header/Header'\nimport TaskList from '../components/TaskList/TaskList'\nimport { useState } from 'react';\n\nconst Home = () => {\n\n  const [tasks, setTasks] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  const toggleFormListener = () => {\n    setIsFormVisible(!isFormVisible);\n  }\n\n  const addTaskListener = (task) => {\n    setTasks([ ...tasks,\n      { id: Math.floor(Math.random()*1000 + 1), ...task }\n    ]);\n  }\n\n  const deleteTaskListener = (id) => {\n    const filteredTasks = tasks.filter((task) => task.id !== id);\n    setTasks(filteredTasks);\n  }\n\n  const toggleReminderListener = (id) => {\n    setTasks(tasks.map((task) => \n      task.id === id ? { ...task, reminder: !task.reminder } : task\n    ));\n  }\n\n  return (\n    <div className=\"container\">\n      <Header isFormVisible={ isFormVisible } toggleForm={ toggleFormListener } />\n      { isFormVisible && <Form addTask={ addTaskListener } /> }\n      <TaskList\n       deleteTask = { deleteTaskListener }\n       toggleReminder = { toggleReminderListener }\n       tasks={ tasks } />\n    </div>\n  )\n}\n\nexport default Home\n","import Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}